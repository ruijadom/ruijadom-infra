name: 🚀 Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  NPM_TOKEN: ${{ secrets.RUIJADOM_INFRA_ACCESS_TOKEN }}

jobs:
  release:
    name: 🚀 Release
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [lts/*]
        pnpm-version: [latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: 🥡 Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: 🧩 Install Dependencies
        id: install-dependencies
        run: pnpm install

      - name: 🏗️ Build
        id: build-the-mono-repo
        run: pnpm build

      - name: 🔧 Configure npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc

      - name: 📋 Check Git Status
        run: git status

      - name: 📣 Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: "chore(release): version packages 🦋"
          publish: pnpm publish --access public --registry=https://registry.npmjs.org/ --no-git-checks
          version: pnpm version
          commit: "chore(release): version packages 🦋 [skip ci]"
        env:
          GITHUB_TOKEN: ${{ secrets.RUIJADOM_INFRA_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.RUIJADOM_INFRA_ACCESS_TOKEN }}
